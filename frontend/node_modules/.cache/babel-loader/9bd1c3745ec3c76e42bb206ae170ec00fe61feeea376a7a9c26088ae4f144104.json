{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Development/code challenge/Student-record/frontend/src/components/StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport StudentForm from \"./StudentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COURSES = [\"Mathematics\", \"Physics\", \"Computer Science\", \"Chemistry\", \"Biology\", \"History\", \"Economics\", \"Philosophy\", \"Engineering\", \"Art\"];\nexport default function StudentDashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  async function fetchStudents() {\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/students\");\n      if (!res.ok) throw new Error(\"Failed to fetch students\");\n      const data = await res.json();\n      setStudents(data);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: \"error\",\n        text: \"Unable to load students.\"\n      });\n      setTimeout(() => setMessage(null), 2000);\n    }\n  }\n  async function addStudent(student) {\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(student)\n      });\n      const body = await res.json();\n      if (!res.ok) {\n        setMessage({\n          type: \"error\",\n          text: body.error || \"Failed to add student\"\n        });\n        return;\n      }\n      setStudents(prev => [...prev, body]);\n      setMessage({\n        type: \"success\",\n        text: \"Student added!\"\n      });\n      setTimeout(() => setMessage(null), 2000);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: \"error\",\n        text: \"Network error while adding student\"\n      });\n    }\n  }\n  async function deleteStudent(id) {\n    if (!window.confirm(\"Delete this student?\")) return;\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!res.ok) {\n        setMessage({\n          type: \"error\",\n          text: \"Failed to delete student\"\n        });\n        return;\n      }\n      setStudents(prev => prev.filter(s => s.id !== id));\n      setMessage({\n        type: \"success\",\n        text: \"Student deleted\"\n      });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: \"error\",\n        text: \"Network error while deleting student\"\n      });\n    }\n  }\n  async function editStudent(s) {\n    const newName = prompt(\"New name\", s.name);\n    const newCourse = prompt(\"New course\", s.course);\n    if (!newName || !newCourse) return;\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${s.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newName,\n          course: newCourse\n        })\n      });\n      if (!res.ok) {\n        const body = await res.json();\n        alert(body.error || \"Failed to update student\");\n        return;\n      }\n      const updatedStudent = await res.json();\n      setStudents(prev => prev.map(st => st.id === s.id ? updatedStudent : st));\n      setMessage({\n        type: \"success\",\n        text: \"Student updated!\"\n      });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: \"error\",\n        text: \"Network error while updating student\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF93 Student Record System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogout,\n      style: {\n        position: \"absolute\",\n        right: 20,\n        top: 20\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(StudentForm, {\n        courses: COURSES,\n        onAdd: addStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: students.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: s.course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => editStudent(s),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deleteStudent(s.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"gNJC+Bnzst0TkRNajGZ+Imn3VOE=\");\n_c = StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","StudentForm","jsxDEV","_jsxDEV","COURSES","StudentDashboard","user","onLogout","_s","students","setStudents","message","setMessage","fetchStudents","res","fetch","ok","Error","data","json","err","console","error","type","text","setTimeout","addStudent","student","method","headers","body","JSON","stringify","prev","deleteStudent","id","window","confirm","filter","s","editStudent","newName","prompt","name","newCourse","course","alert","updatedStudent","map","st","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","position","right","top","courses","onAdd","_c","$RefreshReg$"],"sources":["/home/ezra/Development/code challenge/Student-record/frontend/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StudentForm from \"./StudentForm\";\n\nconst COURSES = [\n  \"Mathematics\", \"Physics\", \"Computer Science\", \"Chemistry\", \"Biology\",\n  \"History\", \"Economics\", \"Philosophy\", \"Engineering\", \"Art\"\n];\n\nexport default function StudentDashboard({ user, onLogout }) {\n  const [students, setStudents] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  async function fetchStudents() {\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/students\");\n      if (!res.ok) throw new Error(\"Failed to fetch students\");\n      const data = await res.json();\n      setStudents(data);\n    } catch (err) {\n      console.error(err);\n      setMessage({ type: \"error\", text: \"Unable to load students.\" });\n      setTimeout(() => setMessage(null), 2000);\n    }\n  }\n\n  async function addStudent(student) {\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/students\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(student)\n      });\n      const body = await res.json();\n      if (!res.ok) {\n        setMessage({ type: \"error\", text: body.error || \"Failed to add student\" });\n        return;\n      }\n      setStudents(prev => [...prev, body]);\n      setMessage({ type: \"success\", text: \"Student added!\" });\n      setTimeout(() => setMessage(null), 2000);\n    } catch (err) {\n      console.error(err);\n      setMessage({ type: \"error\", text: \"Network error while adding student\" });\n    }\n  }\n\n  async function deleteStudent(id) {\n    if (!window.confirm(\"Delete this student?\")) return;\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, { method: \"DELETE\" });\n      if (!res.ok) {\n        setMessage({ type: \"error\", text: \"Failed to delete student\" });\n        return;\n      }\n      setStudents(prev => prev.filter(s => s.id !== id));\n      setMessage({ type: \"success\", text: \"Student deleted\" });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({ type: \"error\", text: \"Network error while deleting student\" });\n    }\n  }\n\n  async function editStudent(s) {\n    const newName = prompt(\"New name\", s.name);\n    const newCourse = prompt(\"New course\", s.course);\n    if (!newName || !newCourse) return;\n\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${s.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: newName, course: newCourse })\n      });\n      if (!res.ok) {\n        const body = await res.json();\n        alert(body.error || \"Failed to update student\");\n        return;\n      }\n      const updatedStudent = await res.json();\n      setStudents(prev => prev.map(st => st.id === s.id ? updatedStudent : st));\n      setMessage({ type: \"success\", text: \"Student updated!\" });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({ type: \"error\", text: \"Network error while updating student\" });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>🎓 Student Record System</h1>\n      <button \n        onClick={onLogout} \n        style={{ position: \"absolute\", right: 20, top: 20 }}\n      >\n        Logout\n      </button>\n\n      {message && <div className={`message ${message.type}`}>{message.text}</div>}\n\n      <div className=\"controls\">\n        <StudentForm courses={COURSES} onAdd={addStudent} />\n      </div>\n\n      <div className=\"grid\">\n        {students.map(s => (\n          <div className=\"card\" key={s.id}>\n            <h3>{s.name}</h3>\n            <p>{s.course}</p>\n            <div className=\"actions\">\n              <button className=\"edit\" onClick={() => editStudent(s)}>Edit</button>\n              <button className=\"delete\" onClick={() => deleteStudent(s.id)}>Delete</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}